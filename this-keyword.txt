

==============> THE THIS KEYWORD 

>>>>>>> THE THIS KEYWORD AOR VARIABLE  = IS A SPECIAL VARIABLE THAT IS CREATED FOR EVERY ESECUTION CONTEXT ( THEREFORE ANY - EVERY FUNCTION)

    TAKES THE VALUE OF (POINTS TO) THE "OWNER" OF THE FUNCTION IN WHICH THE THIS KEYWORD IS USED 

    IS ONE OF THE THREE COMPONENTS OF ANY EXECUTION CONTEXT ALONG WITH THE VARIABLE ENVIROMENT AND SCOPE CHAIN  



----->>>>>>> THE VALUE OF THE THIS KEYWORD IS NOT STATIC. 

IT DEPENDS ON HOW THE FUNCTION IS CALLED, AND IT'S VALUE IS ONLY ASSIGNED WHEN THE FUNCTION IS ACTUALLY CALLED - SO IT'S VARRY DIFFERENT FROM A NORMAL VALUE IN THIS REGARD 

FOR EXAMPLE, IF WE SET X = 5 THEN IT WILLL ALWAYS JUST BE FIVE - BUT THE THIS KEYWORD DEPENDS ON THE WAY IN WHICH A FUNCTION IS CALLED 

- BUT WHAT DOES THAT ACTUALLY MEAN??????



->>>>>>>>>>>>> 4 DIFFERENT WAYS IN WHICH FUNCTIONS CAN BE CALLED


1 -> METHOD: AS A FUNCTION ATTACHED TO AN OBJECT -> THIS = <OBJECT THAT IS CALLING THE METHOD> 

    SO WHEN WE CALL A METHOD, THE THIS KEYWORD INSIDE OF THAT METHOD WILL SIMPLY POINT TO THE OBJECT ON WHICH THE METHOD IS CALLED 
    OR IN OTHER WORDS, IT POINTS TO THE OBJECT THAT IS CALLING THE METHOD 

    THE calcAge FUNCTION IS A METHOD ATTACHED TO THE OBJECT JONAS 
    THEN, ON JONAS WE CAN ALSO ACCESS ALL THE PROPETTIES THAT IT HAS SO THE this.year WILL BECOME jonas.year

    const jonas = {
        name: 'Jonas',
        year: 1989, 
        calcAge: function() {
            return 2037 - this.year (THIS = JONAS OBJECT)
        }
    }

jonas.calcAge(); 


2 -> SIMPLE FUNCTION CALL : ANOTHER WAY OF CALLING FUNCTIONS IS BY SIMPLY CALLING THEM AS NORMAL FUNCTIONS - SO NOT AS A METHOD AND SO NOT ATTACHED TO ANY OBJECT 

    IN THIS CASE THE THIS KEYWORD WILL SIMPLY BE UNDEFINED. HOWEVER, THAT IS ONLY VALID FOR STRICT MODE - IF YOU'RE NOT IN THE STRICT MODE <THIS> WILL POINT TO THE GLOBAL OBJECT 
    WHICH IN CASE OF THE BROWSER IS THE WINDOW OBJECT 



3 -> ARROW FUNCTIONS : THIS = <THIS OF SURROUNDING FUNCTION (LEXICAL THIS)> WHILE ARROW FUNCTIONS ARE NOT EXACTLY A WAY OF CALLING FUNCTIONS, IT'S AN IMPORTANT KIND OF FUNCTION THAT WE NEED TO CONSIDER.
    BECAUSE ARROW FUNCTIONS DO NOT GET THEIR OWN THIS KEYWORD
    INSTEAD IF YOU USE THE THIS VARIABLE IN AN ARROW FUNCTION - IT WILL SIMPLY BE THE THIS KEYWORD OF THE SURROUNDING FUNCTION, SO THE PARENT FUNCTION 
    IN TECHNICAL TERMS THIS IS CALLED THE 'LEXICAL THIS KEYWORD'
    BECAUSE IT SIMPLY GETS PICKED UP FROM THE OUTER LEXICAL SCOPE OF THE ARROW FUNCTION 


4 -> EVENT LISTENER: THIS = <DOM ELEMENT THAT THE HANDLER IS ATTACHED TO>


THERE ARE MORE WAYS OF CALLING A FUNCTION LIKE :: NEW (KEYWORD), CALL, APPLY, BIND 

=====================================================================================================

---> WHAT THE KEY WORD IS NOT: 

THIS KEYWORD WILL NEVER POINT TO THE FUNCTION ITSELF AND ALSO NOT THE ITS VARIABLE VARIABLE ENVIROMENT (VARIABLE ENVIROMENT OF THE FUNCTION) 
















